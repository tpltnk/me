FROM rust:latest

RUN apt-get install -y curl

RUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
RUN echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list

RUN apt-get update
RUN apt install -y --no-install-recommends software-properties-common
RUN apt-get install -y --no-install-recommends cmake libstdc++-10-dev libxxhash-dev yarn git make zlib1g-dev ca-certificates pkg-config
RUN apt-get clean
RUN rm -rf /var/lib/apt/lists/*

# RUN echo "deb http://apt.llvm.org/buster/ llvm-toolchain-buster main\n" >> /etc/apt/sources.list
# RUN echo "deb-src http://apt.llvm.org/buster/ llvm-toolchain-buster main\n" >> /etc/apt/sources.list
# RUN echo "deb http://apt.llvm.org/buster/ llvm-toolchain-buster-12 main\n" >> /etc/apt/sources.list
# RUN echo "deb-src http://apt.llvm.org/buster/ llvm-toolchain-buster-12 main\n" >> /etc/apt/sources.list
# RUN echo "deb http://apt.llvm.org/buster/ llvm-toolchain-buster-13 main\n" >> /etc/apt/sources.list
# RUN echo "deb-src http://apt.llvm.org/buster/ llvm-toolchain-buster-13 main\n" >> /etc/apt/sources.list

# RUN apt-get install -y wget make tar

# RUN wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -

# TODO: Make optional installation of cmake from source rather than via apt-get
# ENV CMAKE_ARCHIVE="https://github.com/Kitware/CMake/releases/download/v3.23.1/cmake-3.23.1.tar.gz"
# ENV CMAKE_ARCHIVE_EXTRACTION_DIR="cmake"
# ENV CMAKE_ARCHIVE_DIR="cmake-3.23.1"

# RUN wget $CMAKE_ARCHIVE
# RUN mkdir -p $CMAKE_ARCHIVE_EXTRACTION_DIR
# RUN tar -xf $(basename $CMAKE_ARCHIVE) -C $CMAKE_ARCHIVE_EXTRACTION_DIR

# RUN cd $CMAKE_ARCHIVE_EXTRACTION_DIR \
#     && cd $CMAKE_ARCHIVE_DIR \
#     && chmod +x ./bootstrap \
#     && ./bootstrap -- -D CMAKE_BUILD_TYPE:STRING=Release \
#     && make \
#     && make install

# RUN cat /etc/apt/sources.list

# RUN apt-get update
# RUN apt-get upgrade -y
# RUN apt-get install -y \
#       ca-certificates \
#       git \
#       clang-13 \
#       clang++-13 \
#       zlib1g-dev \
#       libssl-dev \
#       pkg-config \
#       llvm \
#    && apt-get clean \
#    && rm -rf /var/lib/apt/lists/*

# RUN update-alternatives --install /usr/bin/cc cc /usr/bin/clang-13 100
# RUN update-alternatives --install /usr/bin/c++ c++ /usr/bin/clang-13 100
# RUN ln -s /usr/bin/clang-13 /usr/bin/clang
# RUN ln -s /usr/bin/clang++-13 /usr/bin/clang++

# RUN export CMAKE_C_COMPILER=clang-13
# RUN export CMAKE_CXX_COMPILER=clang++-13

ENV MOLD_REPO="https://github.com/rui314/mold"

# MOLD_CXXFLAGS=-std=c++2a
# MOLD_CXXFLAGS=-stdlib=libstdc++ with g++
RUN git clone $MOLD_REPO
RUN cd $(basename $MOLD_REPO) \
    && make -j$(nproc) \
    && make install

WORKDIR /opt

COPY . /opt

RUN yarn global add wasm-pack
RUN yarn global add webpack

RUN yarn install

EXPOSE 80

ENTRYPOINT yarn prod
